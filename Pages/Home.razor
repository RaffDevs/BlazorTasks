@page "/"
@using TaskModel = TarefasBlazor.Models.Task
@using TarefasBlazor.Services
@inject TaskService taskService

<PageTitle>Home</PageTitle>

<MudContainer>
    <MudGrid Class="my-3">
        <MudItem xs="12" md="4">
            <MudTextField @bind-Value="_description" Disabled="_loading" Label="Nova Tarefa" Variant="Variant.Outlined"></MudTextField>
            @if (_hasErrors)
            {
                <MudAlert Class="mt-2" Dense="true" Severity="Severity.Error">Meltdown is imminent</MudAlert>
            }
        </MudItem>
        <MudItem xs="12" md="8" Align="@Align.Start" Class="mt-3">
            <MudButton Size="Size.Large" Variant="Variant.Filled" Color="Color.Primary" @onclick="AddTask">Cadastrar</MudButton>
        </MudItem>
    </MudGrid>

    @if (_tasks == null)
    {
        <MudProgressCircular Color="Color.Default" Indeterminate="true"/>
    }
    else if (!_tasks.Any())
    {
        <MudText>Nenhuma tarefa disponivel!</MudText>
    }
    else
    {
        <MudTable Items="@_tasks" Hover="true" Breakpoint="Breakpoint.Sm" Loading="@_loading" LoadingProgressColor="Color.Info">
            <HeaderContent>
                <MudTh>Id</MudTh>
                <MudTh>Description</MudTh>
                <MudTh>Completed</MudTh>
                <MudTh>Created At</MudTh>
                <MudTh> </MudTh>
                <MudTh></MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Id">@context.Id</MudTd>
                <MudTd DataLabel="Description">@context.Description</MudTd>
                <MudTd DataLabel="Created At">@context.CreatedAt</MudTd>
                <MudTd DataLabel="Completed">
                    <MudCheckBox @bind-Value="@context.Done" Color="Color.Primary"></MudCheckBox>
                </MudTd>
                <MudTd DataLabel="Delete">
                    <MudIconButton
                        Icon="@Icons.Material.Filled.Delete"
                        Color="Color.Error"
                        aria-label="delete"
                        @onclick="() => DeletaTarefa(context)">
                    </MudIconButton>
                </MudTd>
            </RowTemplate>
        </MudTable>
    }

</MudContainer>


@code {

    private List<TaskModel> _tasks = [];
    private bool _loading = true;
    private bool _hasErrors = false;
    private string? _description = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        var data = await taskService.GetTasks();
        _tasks = data.ToList();
        _loading = false;
    }

    private void AddTask()
    {
        if (String.IsNullOrEmpty(_description))
        {
            _hasErrors = true;
            return;
        }
        
        var task = new TaskModel
        {
            Id = Guid.NewGuid(),
            Description = _description,
            CreatedAt = DateTime.Now,
            Done = false
        };

        _tasks.Add(task);
        _description = string.Empty;
        _hasErrors = false;

    }

    private void DeletaTarefa(TaskModel context)
    {
        _tasks.Remove(_tasks.FirstOrDefault(t => t.Id == context.Id) ?? throw new InvalidOperationException());
    }

}