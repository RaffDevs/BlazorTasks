@page "/"
@using TaskModel = TarefasBlazor.Models.Task
@using TarefasBlazor.Services
@using TarefasBlazor.Pages.Components
@inject TaskService taskService

<PageTitle>Home</PageTitle>

<MudContainer>
    <MudGrid Class="my-3">
        <MudItem xs="12" md="4">
            <MudTextField @bind-Value="_description" Disabled="_loading" Label="Nova Tarefa" Variant="Variant.Outlined"></MudTextField>
            @if (_hasErrors)
            {
                <MudAlert Class="mt-2" Dense="true" Severity="Severity.Error">Campo não pode ser vazio</MudAlert>
            }
        </MudItem>
        <MudItem xs="12" md="8" Align="@Align.Start" Class="mt-3">
            <MudButton Size="Size.Large" Variant="Variant.Filled" Color="Color.Primary" @onclick="AddTask">Cadastrar</MudButton>
        </MudItem>
    </MudGrid>

    @if (_tasks == null)
    {
        <MudProgressCircular Color="Color.Default" Indeterminate="true"/>
    }
    else if (!_tasks.Any())
    {
        <AlertMessage Message="Nenhuma tarefa cadastrada!"/>
    }
    else
    {
        <TasksList Tasks="_tasks" IsLoading="_loading" RemoveTarefa="DeletaTarefa"/>
    }

</MudContainer>


@code {

    private List<TaskModel> _tasks = [];
    private bool _loading = true;
    private bool _hasErrors = false;
    private string? _description = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        var data = await taskService.GetTasks();
        _tasks = data.ToList();
        _loading = false;
    }

    private void AddTask()
    {
        if (String.IsNullOrEmpty(_description))
        {
            _hasErrors = true;
            return;
        }

        var task = new TaskModel
        {
            Id = Guid.NewGuid(),
            Description = _description,
            CreatedAt = DateTime.Now,
            Done = false
        };

        _tasks.Add(task);
        _description = string.Empty;
        _hasErrors = false;
    }
    
    private void DeletaTarefa(TaskModel task)
    {
        Console.Write("Hey!");
        _tasks.Remove(task);
    }
}

